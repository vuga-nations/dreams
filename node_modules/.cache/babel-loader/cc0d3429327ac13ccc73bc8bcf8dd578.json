{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENTERNITY\\\\Downloads\\\\vuga nation\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./common/header/Header\";\nimport Pages from \"./pages/Pages\";\nimport Data from \"./components/Data\";\nimport Cart from \"./common/Cart/Cart\";\nimport Footer from \"./common/footer/Footer\";\nimport Sdata from \"./components/shops/Sdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*\n  step1 :  const { productItems } = Data \n  lai pass garne using props\n  \n  Step 2 : item lai cart ma halne using useState\n  ==> CartItem lai pass garre using props from  <Cart CartItem={CartItem} /> ani import garrxa in cartItem ma\n    Step 3 :  chai flashCard ma xa button ma\n   Step 4 :  addToCart lai chai pass garne using props in pages and cart components\n  */\n  //Step 1 :\n  const {\n    productItems\n  } = Data;\n  const {\n    shopItems\n  } = Sdata; //Step 2 :\n\n  const [CartItem, setCartItem] = useState([]); //Step 4 :\n\n  const addToCart = product => {\n    // if hamro product alredy cart xa bhane  find garna help garxa\n    const productExit = CartItem.find(item => item.id === product.id); // if productExit chai alredy exit in cart then will run fun() => setCartItem\n    // ani inside => setCartItem will run => map() ani yo map() chai each cart ma\n    // gayara check garxa if item.id ra product.id chai match bhayo bhane\n    // productExit product chai display garxa\n    // ani increase  exits product QTY by 1\n    // if item and product doesnt match then will add new items\n\n    if (productExit) {\n      setCartItem(CartItem.map(item => item.id === product.id ? { ...productExit,\n        qty: productExit.qty + 1\n      } : item));\n    } else {\n      // but if the product doesnt exit in the cart that mean if card is empty\n      // then new product is added in cart  and its qty is initalize to 1\n      setCartItem([...CartItem, { ...product,\n        qty: 1\n      }]);\n    }\n  }; // Stpe: 6\n\n\n  const decreaseQty = product => {\n    // if hamro product alredy cart xa bhane  find garna help garxa\n    const productExit = CartItem.find(item => item.id === product.id); // if product is exit and its qty is 1 then we will run a fun  setCartItem\n    // inside  setCartItem we will run filter to check if item.id is match to product.id\n    // if the item.id is doesnt match to product.id then that items are display in cart\n    // else\n\n    if (productExit.qty === 1) {\n      setCartItem(CartItem.filter(item => item.id !== product.id));\n    } else {\n      // if product is exit and qty  of that produt is not equal to 1\n      // then will run function call setCartItem\n      // inside setCartItem we will run map method\n      // this map() will check if item.id match to produt.id  then we have to desc the qty of product by 1\n      setCartItem(CartItem.map(item => item.id === product.id ? { ...productExit,\n        qty: productExit.qty - 1\n      } : item));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        CartItem: CartItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Pages, {\n            productItems: productItems,\n            addToCart: addToCart,\n            shopItems: shopItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            CartItem: CartItem,\n            addToCart: addToCart,\n            decreaseQty: decreaseQty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"V8ZaGifLETvvYyZkoaDLi4+CBQA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ENTERNITY/Downloads/vuga nation/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Header","Pages","Data","Cart","Footer","Sdata","App","productItems","shopItems","CartItem","setCartItem","addToCart","product","productExit","find","item","id","map","qty","decreaseQty","filter"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport \"./App.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Header from \"./common/header/Header\"\nimport Pages from \"./pages/Pages\"\nimport Data from \"./components/Data\"\nimport Cart from \"./common/Cart/Cart\"\nimport Footer from \"./common/footer/Footer\"\nimport Sdata from \"./components/shops/Sdata\"\n\nfunction App() {\n  /*\n  step1 :  const { productItems } = Data \n  lai pass garne using props\n  \n  Step 2 : item lai cart ma halne using useState\n  ==> CartItem lai pass garre using props from  <Cart CartItem={CartItem} /> ani import garrxa in cartItem ma\n \n  Step 3 :  chai flashCard ma xa button ma\n\n  Step 4 :  addToCart lai chai pass garne using props in pages and cart components\n  */\n\n  //Step 1 :\n  const { productItems } = Data\n  const { shopItems } = Sdata\n\n  //Step 2 :\n  const [CartItem, setCartItem] = useState([])\n\n  //Step 4 :\n  const addToCart = (product) => {\n    // if hamro product alredy cart xa bhane  find garna help garxa\n    const productExit = CartItem.find((item) => item.id === product.id)\n    // if productExit chai alredy exit in cart then will run fun() => setCartItem\n    // ani inside => setCartItem will run => map() ani yo map() chai each cart ma\n    // gayara check garxa if item.id ra product.id chai match bhayo bhane\n    // productExit product chai display garxa\n    // ani increase  exits product QTY by 1\n    // if item and product doesnt match then will add new items\n    if (productExit) {\n      setCartItem(CartItem.map((item) => (item.id === product.id ? { ...productExit, qty: productExit.qty + 1 } : item)))\n    } else {\n      // but if the product doesnt exit in the cart that mean if card is empty\n      // then new product is added in cart  and its qty is initalize to 1\n      setCartItem([...CartItem, { ...product, qty: 1 }])\n    }\n  }\n\n  // Stpe: 6\n  const decreaseQty = (product) => {\n    // if hamro product alredy cart xa bhane  find garna help garxa\n    const productExit = CartItem.find((item) => item.id === product.id)\n\n    // if product is exit and its qty is 1 then we will run a fun  setCartItem\n    // inside  setCartItem we will run filter to check if item.id is match to product.id\n    // if the item.id is doesnt match to product.id then that items are display in cart\n    // else\n    if (productExit.qty === 1) {\n      setCartItem(CartItem.filter((item) => item.id !== product.id))\n    } else {\n      // if product is exit and qty  of that produt is not equal to 1\n      // then will run function call setCartItem\n      // inside setCartItem we will run map method\n      // this map() will check if item.id match to produt.id  then we have to desc the qty of product by 1\n      setCartItem(CartItem.map((item) => (item.id === product.id ? { ...productExit, qty: productExit.qty - 1 } : item)))\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Header CartItem={CartItem} />\n        <Switch>\n          <Route path='/' exact>\n            <Pages productItems={productItems} addToCart={addToCart} shopItems={shopItems} />\n          </Route>\n          <Route path='/cart' exact>\n            <Cart CartItem={CartItem} addToCart={addToCart} decreaseQty={decreaseQty} />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}